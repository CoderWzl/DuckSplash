plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
    id 'com.google.protobuf' version '0.8.12'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "wzl.android.ducksplash"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            applicationIdSuffix '.debug'
        }
    }

    signingConfigs {
        release {
            storeFile file("../ducksplash.jks")
            storePassword "lin123456"
            keyAlias "ducksplash"
            keyPassword "lin123456"
            //v2SigningEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"]
        useIR = true
    }

}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.kotlinVersion"
    implementation "androidx.core:core-ktx:$rootProject.coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintlayoutVersion"
    implementation "androidx.fragment:fragment-ktx:$rootProject.fragmentKtxVersion"
    implementation "androidx.browser:browser:$rootProject.browserVersion"

    // navigation
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"

    // paging
    implementation "androidx.paging:paging-runtime-ktx:$rootProject.pagingVersion"

    // lifecycle
    //implementation "androidx.lifecycle:lifecycle-extensions-ktx:$rootProject.lifecycleVersion" 将被弃用
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // okhttp retrofit
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"

    // Okio
    implementation "com.squareup.okio:okio:$rootProject.okIoVersion"

    // Moshi
    implementation "com.squareup.moshi:moshi:$rootProject.moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$rootProject.moshiVersion"

    //di

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesCoreVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesAndroidVersion"

    //glide
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    implementation "jp.wasabeef:glide-transformations:$rootProject.glideTransformationsVersion"
    // If you want to use the GPU Filters
    implementation "jp.co.cyberagent.android:gpuimage:$rootProject.gpuImageVersion"

    // Hilt dependencies
    implementation "com.google.dagger:hilt-android:$rootProject.hiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$rootProject.hiltViewModelVersion"
    kapt "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"
    kapt "androidx.hilt:hilt-compiler:$rootProject.hiltViewModelVersion"

    // DataStore
    implementation "androidx.datastore:datastore-preferences:$rootProject.datastoreVersion"
    implementation "androidx.datastore:datastore-core:$rootProject.datastoreVersion"
    // proto
    implementation "com.google.protobuf:protobuf-javalite:3.11.0"

    // RecyclerView
    //implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerViewVersion"

    //test
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.ext_junitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoCoreVersion"

    // LeakCanary
    //debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakCanaryVersion"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.10.0"
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

